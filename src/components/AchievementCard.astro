---
// src/components/AchievementCard.astro
import type { Achievement } from '../types';

interface Props {
  achievement: Achievement;
}

const { achievement } = Astro.props;
const isHidden = achievement.hidden || false;

// Format date based on showFullDate preference
const formattedDate = achievement.showFullDate 
  ? new Date(achievement.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })
  : achievement.date;
---

{!isHidden && (
  <a 
    href={achievement.url}
    target="_blank"
    rel="noopener noreferrer"
    class="block p-4 bg-gray-50 dark:bg-gray-800 rounded-lg shadow-sm hover:shadow-md transition-all duration-200 hover:scale-105 border border-gray-200 dark:border-gray-700 hover:border-[#a5fd0e] border-t-4 border-t-[#a5fd0e] text-center"
    data-track="true"
    data-id={achievement.id}
    data-hidden={isHidden}
    data-type="achievement"
    data-description={achievement.description}
  >
    <div class="flex flex-col items-center">
      <h3 class="font-medium text-gray-900 dark:text-white flex items-center">
        <i class={`${achievement.icon} text-[#a5fd0e] text-xl mr-2`}></i>
        {achievement.title}
      </h3>
      <p class="text-sm text-gray-600 dark:text-gray-400 mt-1">{achievement.description}</p>
      <p class="text-xs text-[#a5fd0e] mt-2 font-medium">{formattedDate}</p>
    </div>
  </a>
)}

{isHidden && (
  <script define:vars={{ achievement }}>
    console.log(
      '%cüèÜ Hidden Achievement Found: ' + achievement.title,
      'color: #a5fd0e; font-weight: bold; font-size: 14px;'
    );
    console.log({
      id: achievement.id,
      title: achievement.title,
      url: achievement.url,
      description: achievement.description,
      date: achievement.date
    });
  </script>
)}