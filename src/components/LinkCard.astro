---
// src/components/LinkCard.astro
import type { Link } from '../types';

interface Props {
  link: Link;
}

const { link } = Astro.props;
const isHidden = link.hidden || false;
---

{!isHidden && (
  <a 
    href={link.url}
    target="_blank"
    rel="noopener noreferrer"
    class="group block p-4 bg-gray-50 dark:bg-gray-800 rounded-lg shadow-sm hover:shadow-md transition-all duration-200 hover:scale-105 border border-gray-200 dark:border-gray-700 hover:border-[#9333ea] dark:hover:border-[#a5fd0e] text-center"
    data-track="true"
    data-id={link.id}
    data-hidden={isHidden}
    data-type="link"
    data-description={link.description}
  >
    <div class="flex flex-col items-center">
      <h3 class="font-medium text-gray-900 dark:text-white flex items-center flex-wrap justify-center">
        <i class={`${link.icon} text-[#9333ea] dark:text-[#a5fd0e] text-xl mr-2 transition-all duration-200 group-hover:scale-110`}></i>
        <span class="break-words">{link.title}</span>
      </h3>
      <p class="text-sm text-gray-600 dark:text-gray-400 mt-1 line-clamp-2 sm:line-clamp-none">{link.description}</p>
    </div>
  </a>
)}

{isHidden && (
  <script define:vars={{ link }}>
    console.log(
      '%cðŸ”— Hidden Link Found: ' + link.title,
      'color: #a5fd0e; font-weight: bold; font-size: 14px;'
    );
    console.log({
      id: link.id,
      title: link.title,
      url: link.url,
      description: link.description
    });
  </script>
)}